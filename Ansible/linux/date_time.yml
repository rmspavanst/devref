# get-timestamp-os.yml
---
- name: Uses shell module to retrieve data and timestamp from the OS
  hosts: localhost

  tasks:

  - name: Get timestamp from the system
    shell: "date +%Y-%m-%d%H-%M-%S"
    register: tstamp

  - name: Get timestamp from the system, include the first 5 nanoseconds digits
    shell: "date +%Y-%m-%d%H-%M-%S.%5N"
    register: tstamp_ns

  - name: Set variables
    set_fact:
     cur_date: "{{ tstamp.stdout[0:10]}}"
     cur_time: "{{ tstamp.stdout[10:]}}"
     cur_time_ns: "{{ tstamp_ns.stdout[10:]}}"

  - name: System timestamp - date
    debug:
     msg:  "Current date: {{ cur_date }}"

  - name: System timestamp - time
    debug:
     msg:  "Current time: {{ cur_time }}"

  - name: System timestamp - time, including the first 5 nanoseconds digits
    debug:
     msg:  "Current time with seconds: {{ cur_time_ns }}"

...


---
- name: date and time demo
  hosts: all
  gather_facts: true
  tasks:
    - name: date and time
      ansible.builtin.debug:
        var: ansible_date_time
    - name: ISO8601
      ansible.builtin.debug:
        var: ansible_date_time.iso8601

...

---
- name: date and time demo
  hosts: all
  gather_facts: true
  tasks:
    - name: date 
      ansible.builtin.debug:
        var: ansible_date_time.date
    - name: time
      ansible.builtin.debug:
        var: ansible_date_time.time

---
---
- hosts: all
  gather_facts: false
  vars:
    exec_date: "{{ lookup('pipe', 'date +%Y-%m-%dT%H:%M:%S') }}"

  tasks:
  - name: print
    debug: var=exec_date
