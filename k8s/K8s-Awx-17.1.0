******Ansible*****


hostnamectl set-hostname kubernetes-master
poweroff
clear
sudo dnf makecache
sudo dnf install epel-release
sudo dnf makecache
sudo dnf install ansible



****K8s-manual Deployment:***********


hostnamectl set-hostname k8s-awx-master
vi /etc/hosts
ping k8s-awx-master

vi /etc/fstab (commentout the swap)
swapoff -a

firewall-cmd --permanent --add-port=6443/tcp
firewall-cmd --permanent --add-port=10250/tcp
systemctl status firewalld
sudo firewall-cmd --reload


cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf 
net.bridge.bridge-nf-call-ip6tables = 1 
net.bridge.bridge-nf-call-iptables = 1 
EOF
sysctl --system


cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo 
[kubernetes] 
name=Kubernetes 
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch 
enabled=1 
gpgcheck=1 
repo_gpgcheck=1 
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg 
exclude=kubelet kubeadm kubectl 
EOF


setenforce 0 

sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

sestatus

yum install -y yum-utils device-mapper-persistent-data lvm2

yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 
yum update -y && yum install containerd.io docker-ce docker-ce-cli


mkdir /etc/docker 
cat > /etc/docker/daemon.json <<EOF 
{ 
  "exec-opts": ["native.cgroupdriver=systemd"], 
  "log-driver": "json-file", 
  "log-opts": { 
    "max-size": "100m" 
  }, 
  "storage-driver": "overlay2", 
  "storage-opts": [ 
    "overlay2.override_kernel_check=true" 
  ] 
} 
EOF


mkdir -p /etc/systemd/system/docker.service.d 
systemctl daemon-reload 
systemctl restart docker 
systemctl enable docker


yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes 
systemctl enable --now kubelet

cat /etc/sysconfig/network-scripts/ifcfg-enp0s3


kubeadm init --pod-network-cidr 10.244.0.0/16 --apiserver-advertise-address=192.168.1.123

watch docker images

kubeadm join 192.168.0.123:6443 --token 77h1ak.dkb8iu8lvwb3btrg --discovery-token-ca-cert-hash sha256:fe300860ee55a41082aa068d874d876dcb3e596318d604baf898b16ce9ef7c92


mkdir -p $HOME/ .kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

## to create network
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"


yum install bash-completion 
echo "source <(kubectl completion bash)" >> ~/.bashrc


Add Role

kubectl label node <node name> node-role.kubernetes.io/<role name>=<key - (any name)>

kubectl label node kubernetes-worker1 node-role.kubernetes.io/worker1=worker1




******AWX install in K8s:****************

ref:

https://virtual-bytes.co.uk/2021/05/06/deploying-ansible-awx-on-kubernetes-from-day-0/


install the helm to manage to create the database pod:
  $ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
$ chmod 700 get_helm.sh
$ ./get_helm.sh


Create Namespace for AWX
  # kubectl create namespace awx

Update namespace in Kibe-config file.

$ kubectl config current-context (use the same contect name in Inventory)

 $ git clone -b "17.1.0" https://github.com/ansible/awx.git

$ cd awx/

  $vi installer/inventory
  localhost ansible_connection=local ansible_python_interpreter="/usr/bin/env python3"

[all:vars]

dockerhub_base=ansible

# Kubernetes Install
kubernetes_context=awx-contx
kubernetes_namespace=awx
kubernetes_web_svc_type=NodePort


postgres_data_dir="~/.awx/pgdocker"

pg_username=awx
pg_password=awxpass
pg_database=awx
pg_port=5432

admin_user=admin
admin_password=password

create_preload_data=True
secret_key=awxsecret
  

Edit the role yaml to add/remove parameters.
 $ vi installer/roles/kubernetes/defaults/main.yml
  AWX is resource hungry and they are with the below default value.

  
Change from 60 seconds to 90 seconds.

postgress_activate_wait: 90
We have additionally added this parameter.

postgress_migrate_wait: 90
  

Added an additional task to wait for 90 seconds before starting with migrating the database:


$ vi installer/install.yml

commentout the – {role: local_docker, when: “openshift_host is not defined and kubernetes_context is not defined”}
  
  
  ansible-playbook -i installer/inventory installer/install.yml


kubectl get svc -n awx (http://localhost:portnumber)


Now upgrade from awx.17.1.0 to 19.2.2