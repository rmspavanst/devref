
# Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and 
services, that facilitates both declarative configuration and automation.

K8s Features:
=============
Container Orchestration:The primary purpose of Kubernetes is to dynamically manage containers across multiple host systems.
Application Reliability:Kubernetes makes it easier to build reliable, self-healing, and scalable applications.
Automation: Kubernetes offers a variety of features to help automate the management of your container apps.


K8s Architectural Overview:
===========================

K8s Control Plane:
------------------
The control plane is a collection of multiple components responsible for managing the cluster itself globally. Essentially, the control
plane controls the cluster.
Individual control plane components can run on any machine in the cluster, but usually are run on dedicated controller machines.
 
Control Plane Components:
1. kube-api-server serves the Kubernetes API, the primary interface to the control plane and the cluster itself.
When interacting with your Kubernetes cluster, you will usually do so using the Kubernetes API.

2. Etcd is the backend data store for the Kubernetes cluster. It provides highavailability storage for all data relating to the state of the cluster.

3. kube-scheduler handles scheduling, the process of selecting an available node in the cluster on which to run containers.

4. kube-controller-manager runs a collection of multiple controller utilities in a single process.
These controllers carry out a variety of automation-related tasks within the Kubernetes cluster.

5. cloud-controller-manager provides an interface between Kubernetes and various cloud platforms. It is only used when using
using cloud-based resources alongside Kubernetes.


K8s Nodes:
----------
Kubernetes Nodes are the machines where the containers managed by the cluster run. A cluster can have any number of nodes.
Various node components manage containers on the machine and communicate with the control plane.

1. Kubelet is the Kubernetes agent that runs on each node. It communicates with the control plane and
ensures that containers are run on its node as instructed by the control plane.
Kubelet also handles the process of reporting container status and other data about containers back to the control plane.

2. The container runtime is not built into Kubernetes. It is a separate piece of software that is responsible for
actually running containers on the machine. Kubernetes supports multiple container runtime implementations. Some popular container runtimes
are Docker and containerd.

3. kube-proxy is a network proxy. It runs on each node and handles some tasks related to providing networking between containers and services 
in the cluster.



What Is kubeadm?
kubeadm is a tool that simplifies the process of building Kubernetes clusters. The kubeadm init command initializes a control
plane. The kubeadm join command can be used to join a new node to the cluster.

$ kubeadm init --config my-config.yml
$ kubeadm init --ignore-preflight-errors all

What Is a Namespace?
Namespaces are virtual clusters backed by the same physical cluster. Kubernetes objects, such as pods and containers, live in
namespaces. Namespaces are a way to separate and organize objects in your cluster.

$ kubectl get namespaces
$ kubectl get pods --namespace my-namespace
$ kubectl create namespace my-namespace