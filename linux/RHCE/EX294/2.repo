Ad-Hoc Commands
Generate an SSH keypair on the control node. You can perform this step manually.

Write a script /home/automation/plays/adhoc that uses Ansible ad-hoc commands to achieve the following:
User automation is created on all inventory hosts (not the control node).
SSH key (that you generated) is copied to all inventory hosts for the automation user and stored in /home/automation/.ssh/authorized_keys.
The automation user is allowed to elevate privileges on all inventory hosts without having to provide a password.
After running the adhoc script on the control node as the automation user, you should be able to SSH into all inventory hosts using the automation user without password, as well as a run all privileged commands.


#!/bin/bash
# Create the directory for ssh keys.
ansible localhost -m file -a "path=/home/automation/.ssh state=directory"
# Generate the ssh keys.
ansible localhost -m openssh_keypair -a "path=/home/automation/.ssh/id_rsa owner=automation group=automation type=rsa"
# Create automation user on managed nodes.
ansible all -m user -a "name=automation password={{ 'devops' | password_hash('sha512') }}"
# share public key to managed nodes, remember to check your ansible.cfg configuration because this command needs sudo privileges.
ansible all -m authorized_key -a "key={{ lookup('file', '/home/automation/.ssh/id_rsa.pub') }} user=automation state=present"
# Add the automation user in each managed node to sudoers group for privilege escalation.
ansible all -m copy -a "content='automation ALL=(root) NOPASSWD:ALL' dest=/etc/sudoers.d/automation"



============================================================================================================================================================================


# Because you will have to install software on the managed hosts, you need to do the following:

Create a shell script with the name packages.sh that runs an Ansible ad-hoc command to create a yum repository on all managed hosts using the information as below:
The Appstream base URL and BaseOS URL are http://repo.ansi.example.com/AppStream and http://repo.ansi.example.com/BaseOS
The Appstream and BaseOS description are RHEL 8 Appstream and RHEL 8 BaseOS
The Appstream and BaseOS names are RHEL_Appstream RHEL_BaseOS
The repositories must be enabled with a gpgkey of http://repo.ansi.example.com/RPM-GPG-KEY-redhat-release


#!/bin/bash
ansible all -m yum_repository -a "name=EX294_BASE description='EX294 base software' baseurl=http://content/rhel8.4/x86_64/dvd/BaseOS gpgcheck=yes gpgkey=http://content/rhel8.4/x86_64/dvd/RPM-GPG-KEY-redhat-release enabled=yes" -u admin -b
ansible all -m yum_repository -a "name=EX294_STREAM description='EX294 stream software' baseurl=http://content/rhel8.4/x86_64/dvd/AppStream gpgcheck=yes gpgkey=http://content/rhel8.4/x86_64/dvd/RPM-GPG-KEY-redhat-release enabled=yes" -u admin -b



ansible all -m yum_repository -a 'name="EX294_BASE" description="EX294 base software" \
baseurl="http://content/rhel8.4/x86_64/dvd/BaseOS" gpgcheck="yes" \
gpgkey="http://content/rhel8.4/x86_64/dvd/RPM-GPG-KEY-redhat-release" enabled="yes"'


ansible all -m command -a 'yum repolist all' -b

========================================================================================================================================================================

2. Create a playbook adhoc.yml for configuring repository in all nodes.

   i) Name = baseos
   Description = Baseos Description
   Url = http://content/rhel9.0/x86_64/dvd/BaseOS
   GPG is enabled.
   Gpgkey = http://content.example.com/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release
   Repository is enabled.

   ii) Name = appstream
   Description = App Description
   Url = http://content/rhel9.0/x86_64/dvd/AppStream
   GPG is enabled.
   Gpgkey = http://content.example.com/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release
   Repository is enabled.


# vim /home/admin/ansible/adhoc.yml
---
- name: Creating yum repository
  hosts: all
  tasks:
   - name: Create BaseOS Repository 
     ansible.builtin.yum_repository:
      name: "baseos" 
      description: "Baseos Description" 
      baseurl: http://content/rhel9.0/x86_64/dvd/BaseOS 
      gpgcheck: yes 
      gpgkey: http://content.example.com/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release 
      enabled: yes
   - name: Create Appstream Repository
     ansible.builtin.yum_repository: 
      name: "appstream" 
      description: "App Description" 
      baseurl: http://content/rhel9.0/x86_64/dvd/AppStream 
      gpgcheck: yes 
      gpgkey: http://content.example.com/rhel9.0/x86_64/dvd/RPM-GPG-KEY-redhat-release 
      enabled: yes

# ansible-navigator run adhoc.yml -m stdout

# ansible all -m command -a 'yum repolist all'  #(verify the output)


